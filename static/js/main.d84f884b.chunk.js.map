{"version":3,"sources":["services/cryptoApi.js","services/cryptoNewsApi.js","app/store.js","images/cryptocurrency.png","components/Navbar.jsx","components/Homepage.jsx","components/Exchanges.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","components/News.jsx","App.js","index.js"],"names":["cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timePeriod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","configureStore","reducer","Navbar","useState","activeMenu","activeMenuSet","screenSize","screenSizeSet","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","Typography","Homepage","data","isFetching","globalStats","stats","console","log","span","title","value","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","simplified","Text","Panel","Collapse","Exchanges","exchangesList","exchanges","map","exchange","showArrow","header","rank","iconUrl","name","volume","numberOfMarkets","marketShare","id","HTMLReactParser","description","Cryptocurrencies","cryptoList","cryptos","cryptosSet","searchTerm","searchTermSet","filterData","coins","filter","coin","toLowerCase","includes","placeholder","onChange","e","target","gutter","currency","xs","sm","lg","style","borderRadius","extra","hoverable","alt","price","marketCap","change","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimeStamp","i","history","length","push","Date","timeStamp","toLocaleString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Option","Select","CryptoDetails","useParams","timePeriodSet","cryptoDetails","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","links","link","type","href","rel","demoImage","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","image","thumbnail","contentUrl","substring","provider","moment","datePublished","startOf","fromNow","App","path","element","color","textAlign","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.d84f884b.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoApiHeaders = {\r\n  \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\r\n  \"x-rapidapi-key\": \"809f6dff89msh65dd40af7b545e4p11e683jsn8351145d59f2\",\r\n};\r\n\r\nconst baseUrl = \"https://coinranking1.p.rapidapi.com\";\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\r\n\r\nexport const cryptoApi = createApi({\r\n  reducerPath: \"cryptoApi\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl,\r\n  }),\r\n  endpoints: (builder) => ({\r\n    getCryptos: builder.query({\r\n      query: (count) => createRequest(`/coins?limit=${count}`),\r\n    }),\r\n\r\n    getCryptoDetails: builder.query({\r\n      query: (coinId) => createRequest(`/coin/${coinId}`),\r\n    }),\r\n\r\n    getCryptoHistory: builder.query({\r\n      query: ({ coinId, timePeriod }) =>\r\n        createRequest(`/coin/${coinId}/history/${timePeriod}`),\r\n    }),\r\n\r\n    getExchanges: builder.query({\r\n      query: () => createRequest(\"/exchanges\"),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetCryptosQuery,\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery,\r\n  useGetExchangesQuery,\r\n} = cryptoApi;\r\n\r\n// var options = {\r\n//     method: 'GET',\r\n//     url: 'https://coinranking1.p.rapidapi.com/stats',\r\n//     headers: {\r\n//       'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n//       'x-rapidapi-key': '809f6dff89msh65dd40af7b545e4p11e683jsn8351145d59f2'\r\n//     }\r\n//   };\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoNewsHeaders = {\r\n  \"x-bingapis-sdk\": \"true\",\r\n  \"x-rapidapi-host\": \"bing-news-search1.p.rapidapi.com\",\r\n  \"x-rapidapi-key\": \"809f6dff89msh65dd40af7b545e4p11e683jsn8351145d59f2\",\r\n};\r\n\r\nconst baseUrl = \"https://bing-news-search1.p.rapidapi.com\";\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\r\n\r\nexport const cryptoNewsApi = createApi({\r\n  reducerPath: \"cryptoNewsApi\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl,\r\n  }),\r\n  endpoints: (builder) => ({\r\n    getCryptoNews: builder.query({\r\n      query: ({ newsCategory, count }) =>\r\n        createRequest(\r\n          `/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\r\n        ),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\r\n\r\n// var options = {\r\n//     method: 'GET',\r\n//     url: 'https://bing-news-search1.p.rapidapi.com/news',       //for baseUrl\r\n//     params: {safeSearch: 'Off', textFormat: 'Raw'},\r\n//     headers: {\r\n//       'x-bingapis-sdk': 'true',\r\n//       'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n// //       'x-rapidapi-key': '809f6dff89msh65dd40af7b545e4p11e683jsn8351145d59f2'\r\n// //     }\r\n//   };\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { cryptoApi } from \"../services/cryptoApi\";\r\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n  },\r\n});\r\n","export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Menu, Typography, Avatar } from \"antd\";\r\nimport {\r\n  HomeOutlined,\r\n  MoneyCollectOutlined,\r\n  BulbOutlined,\r\n  FundOutlined,\r\n  MenuOutlined,\r\n} from \"@ant-design/icons\";\r\n//images\r\nimport icon from \"../images/cryptocurrency.png\";\r\nconst Navbar = () => {\r\n  const [activeMenu, activeMenuSet] = useState(true);\r\n  const [screenSize, screenSizeSet] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => screenSizeSet(window.innerWidth);\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    handleResize();\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    screenSize < 768 ? activeMenuSet(false) : activeMenuSet(true);\r\n  }, [screenSize]);\r\n\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <div className=\"logo-container\">\r\n        <Avatar src={icon} size=\"large\" />\r\n        <Typography.Title level={2} className=\"logo\">\r\n          <Link to=\"/\">Cryptoverse</Link>\r\n        </Typography.Title>\r\n        <Button\r\n          className=\"menu-control-container\"\r\n          onClick={() => activeMenuSet(true)}\r\n        >\r\n          <MenuOutlined />\r\n        </Button>\r\n      </div>\r\n      {activeMenu && (\r\n        <Menu theme=\"dark\">\r\n          <Menu.Item icon={<HomeOutlined />}>\r\n            <Link to=\"/\">Home</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<FundOutlined />}>\r\n            <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<MoneyCollectOutlined />}>\r\n            <Link to=\"/exchanges\">Exchanges</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<BulbOutlined />}>\r\n            <Link to=\"/news\">News</Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\n//components\r\nimport millify from \"millify\";\r\nimport { Typography, Row, Col, Statistic } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Cryptocurrencies, News } from \"../components\";\r\n\r\nconst { Title } = Typography;\r\nconst Homepage = () => {\r\n  const { data, isFetching } = useGetCryptosQuery(10);\r\n  const globalStats = data?.data?.stats;\r\n\r\n  console.log(data);\r\n\r\n  if (isFetching) return \"Loading...\";\r\n\r\n  return (\r\n    <>\r\n      <Title className=\"heading\" level={2}>\r\n        Global Crypto Statistics\r\n      </Title>\r\n      <Row>\r\n        <Col span={12}>\r\n          <Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Exchanges\"\r\n            value={millify(globalStats.totalExchanges)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Market Cap\"\r\n            value={millify(globalStats.totalMarketCap)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total 24h Volume\"\r\n            value={millify(globalStats.total24hVolume)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Markets\"\r\n            value={millify(globalStats.totalMarkets)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <div className=\"home-heading-container\">\r\n        <Title className=\"home-title\" level={2}>\r\n          Top 10 Cryptocurrencies in the world.\r\n        </Title>\r\n        <Title className=\"show-more\" level={3}>\r\n          <Link to=\"/cryptocurrencies\">Show More</Link>\r\n        </Title>\r\n      </div>\r\n      <Cryptocurrencies simplified />\r\n      <div className=\"home-heading-container\">\r\n        <Title className=\"home-title\" level={2}>\r\n          Latest Cryptocurrencies News\r\n        </Title>\r\n        <Title className=\"show-more\" level={3}>\r\n          <Link to=\"/news\">Show More</Link>\r\n        </Title>\r\n      </div>\r\n      <News simplified />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\nimport millify from \"millify\";\r\nimport { Collapse, Row, Col, Typography, Avatar } from \"antd\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\n\r\nimport { useGetExchangesQuery } from \"../services/cryptoApi\";\r\n\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nconst Exchanges = () => {\r\n  const { data, isFetching } = useGetExchangesQuery();\r\n  const exchangesList = data?.data?.exchanges;\r\n\r\n  if (isFetching) return \"Loading...\";\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={6}>Exchanges</Col>\r\n        <Col span={6}>24h Trade Volume</Col>\r\n        <Col span={6}>Markets</Col>\r\n        <Col span={6}>Change</Col>\r\n      </Row>\r\n      <Row>\r\n        {exchangesList.map((exchange) => (\r\n          <Col span={24}>\r\n            <Collapse>\r\n              <Panel\r\n                key={exchange.id}\r\n                showArrow={false}\r\n                header={\r\n                  <Row key={exchange.id}>\r\n                    <Col span={6}>\r\n                      <Text>\r\n                        <strong>{exchange.rank}.</strong>\r\n                      </Text>\r\n                      <Avatar\r\n                        className=\"exchange-image\"\r\n                        src={exchange.iconUrl}\r\n                      />\r\n                      <Text>\r\n                        <strong>{exchange.name}</strong>\r\n                      </Text>\r\n                    </Col>\r\n                    <Col span={6}>${millify(exchange.volume)}</Col>\r\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\r\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\r\n                  </Row>\r\n                }\r\n              >\r\n                {HTMLReactParser(exchange.description || \"\")}\r\n              </Panel>\r\n            </Collapse>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Exchanges;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport millify from \"millify\";\r\n//components\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Row, Col, Input } from \"antd\";\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\n\r\nconst Cryptocurrencies = ({ simplified }) => {\r\n  const count = simplified ? 10 : 100;\r\n  const { data: cryptoList, isFetching } = useGetCryptosQuery(count);\r\n  const [cryptos, cryptosSet] = useState([]);\r\n  const [searchTerm, searchTermSet] = useState(\"\");\r\n\r\n  //functions\r\n\r\n  useEffect(() => {\r\n    const filterData = cryptoList?.data?.coins.filter((coin) =>\r\n      coin.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    cryptosSet(filterData);\r\n  }, [cryptoList, searchTerm]);\r\n\r\n  if (isFetching) return \"Loading...\";\r\n\r\n  return (\r\n    <>\r\n      {!simplified && (\r\n        <div className=\"search-crypto\">\r\n          <Input\r\n            placeholder=\"Search Crypto Currency...\"\r\n            onChange={(e) => searchTermSet(e.target.value)}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      <Row className=\"crypto-card-container\" gutter={[32, 32]}>\r\n        {cryptos?.map((currency) => (\r\n          <Col className=\"crypto-card\" xs={24} sm={12} lg={6} key={currency.id}>\r\n            <Link to={`/crypto/${currency.id}`}>\r\n              <Card\r\n                title={`${currency.rank}. ${currency.name}`}\r\n                style={{ borderRadius: \"16px\" }}\r\n                extra={\r\n                  <img\r\n                    className=\"crypto-image\"\r\n                    src={currency.iconUrl}\r\n                    hoverable\r\n                    alt=\"not found\"\r\n                  />\r\n                }\r\n              >\r\n                <p>Price: {millify(currency.price)}</p>\r\n                <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                <p>Daily Change: {millify(currency.change)}</p>\r\n              </Card>\r\n            </Link>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cryptocurrencies;\r\n","import React from \"react\";\r\n//components\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Col, Row, Typography } from \"antd\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n  const coinPrice = [];\r\n  const coinTimeStamp = [];\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinPrice.push(coinHistory?.data?.history[i].price);\r\n    coinTimeStamp.push(\r\n      new Date(coinHistory?.data?.history[i].timeStamp).toLocaleString()\r\n    );\r\n  }\r\n\r\n  const data = {\r\n    labels: coinTimeStamp,\r\n    datasets: [\r\n      {\r\n        label: \"Price in US dollar\",\r\n        data: coinPrice,\r\n        fill: false,\r\n        backgroundColor: \"#0071bd\",\r\n        borderColor: \"#0071bd\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"chart-header\">\r\n        <Title level={2} className=\"chart-title\">\r\n          {coinName} Price Chart\r\n        </Title>\r\n        <Col className=\"price-container\">\r\n          <Title className=\"price-change\" level={5}>\r\n            {coinHistory?.data?.change} %\r\n          </Title>\r\n          <Title className=\"current-price\" level={5}>\r\n            Current {coinName} Price: $ {currentPrice}\r\n          </Title>\r\n        </Col>\r\n      </Row>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import React, { useState } from \"react\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport millify from \"millify\";\r\n// components\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Row, Col, Typography, Select } from \"antd\";\r\nimport {\r\n  MoneyCollectOutlined,\r\n  DollarCircleOutlined,\r\n  FundOutlined,\r\n  ExclamationCircleOutlined,\r\n  StopOutlined,\r\n  TrophyOutlined,\r\n  CheckOutlined,\r\n  NumberOutlined,\r\n  ThunderboltOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery,\r\n} from \"../services/cryptoApi\";\r\nimport LineChart from \"./LineChart\";\r\n\r\nconst { Text, Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n  const { coinId } = useParams();\r\n  const [timePeriod, timePeriodSet] = useState(\"7d\");\r\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n  const { data: coinHistory } = useGetCryptoHistoryQuery({\r\n    coinId,\r\n    timePeriod,\r\n  });\r\n  const cryptoDetails = data?.data?.coin;\r\n\r\n  if (isFetching) return \"Loading\";\r\n\r\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\r\n\r\n  const stats = [\r\n    {\r\n      title: \"Price to USD\",\r\n      value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    { title: \"Rank\", value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n    {\r\n      title: \"24h Volume\",\r\n      value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\r\n      icon: <ThunderboltOutlined />,\r\n    },\r\n    {\r\n      title: \"Market Cap\",\r\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"All-time-high(daily avg.)\",\r\n      value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\r\n      icon: <TrophyOutlined />,\r\n    },\r\n  ];\r\n\r\n  const genericStats = [\r\n    {\r\n      title: \"Number Of Markets\",\r\n      value: cryptoDetails.numberOfMarkets,\r\n      icon: <FundOutlined />,\r\n    },\r\n    {\r\n      title: \"Number Of Exchanges\",\r\n      value: cryptoDetails.numberOfExchanges,\r\n      icon: <MoneyCollectOutlined />,\r\n    },\r\n    {\r\n      title: \"Aprroved Supply\",\r\n      value: cryptoDetails.approvedSupply ? (\r\n        <CheckOutlined />\r\n      ) : (\r\n        <StopOutlined />\r\n      ),\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"Total Supply\",\r\n      value: `$ ${millify(cryptoDetails.totalSupply)}`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"Circulating Supply\",\r\n      value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Col className=\"coin-detail-container\">\r\n      <Col className=\"coin-heading-container\">\r\n        <Title className=\"coin-name\" level={2}>\r\n          {cryptoDetails.name} {cryptoDetails.slug} Price\r\n        </Title>\r\n        <p>\r\n          {cryptoDetails.name} live price in US dollars. View value statistics,\r\n          market-cap and supply.{\" \"}\r\n        </p>\r\n      </Col>\r\n      <Select\r\n        defaultValue=\"7d\"\r\n        className=\"select-timeperiod\"\r\n        placeholder=\"Select Time Period...\"\r\n        onChange={(value) => timePeriodSet(value)}\r\n      >\r\n        {time.map((date) => (\r\n          <Option key={date}>{date}</Option>\r\n        ))}\r\n      </Select>\r\n      <LineChart\r\n        coinHistory={coinHistory}\r\n        currentPrice={millify(cryptoDetails.price)}\r\n        coinName={cryptoDetails.name}\r\n      />{\" \"}\r\n      {/*LineChart */}\r\n      <Col className=\"stats-container\">\r\n        <Col className=\"coin-value-statistics\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">\r\n              {cryptoDetails.name} Value Statistics\r\n            </Title>\r\n            <p>An overview showing the stats of {cryptoDetails.name}</p>\r\n          </Col>\r\n          {stats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n        <Col className=\"other-stats-info\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">\r\n              Other Statistics\r\n            </Title>\r\n            <p>An overview showing the stats of all cryptocurrencies</p>\r\n          </Col>\r\n          {genericStats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n      <Col className=\"coin-desc-link\">\r\n        <Row className=\"coin-desc\">\r\n          <Title className=\"coin-details-heading\" level={3}>\r\n            What is {cryptoDetails.name} ?\r\n            {HTMLReactParser(cryptoDetails.description)}\r\n          </Title>\r\n        </Row>\r\n        <Col className=\"coin-links\">\r\n          <Title className=\"coin-details-heading\" level={3}>\r\n            {cryptoDetails.name} Links\r\n          </Title>\r\n          {cryptoDetails.links.map((link) => (\r\n            <Row className=\"coin-link\" key={link.name}>\r\n              <Title className=\"link-name\" level={5}>\r\n                {link.type}\r\n              </Title>\r\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\r\n                {link.name}\r\n              </a>\r\n            </Row>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default CryptoDetails;\r\n","import React, { useState } from \"react\";\r\nimport { Select, Typography, Row, Col, Avatar, Card } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\nimport { useGetCryptoNewsQuery } from \"../services/cryptoNewsApi\";\r\n\r\nconst demoImage =\r\n  \"https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News\";\r\n\r\nconst { Text, Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst News = ({ simplified }) => {\r\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrency\");\r\n  const { data } = useGetCryptosQuery(100);\r\n  const { data: cryptoNews } = useGetCryptoNewsQuery({\r\n    newsCategory,\r\n    count: simplified ? 6 : 12,\r\n  });\r\n\r\n  if (!cryptoNews?.value) return \"Loading...\";\r\n\r\n  return (\r\n    <Row gutter={[24, 24]}>\r\n      {!simplified && (\r\n        <Col span={24}>\r\n          <Select\r\n            showSearch\r\n            className=\"select-news\"\r\n            placeholder=\"Select a Crypto\"\r\n            optionFilterProp=\"children\"\r\n            onChange={(value) => setNewsCategory(value)}\r\n            filterOption={(input, option) =>\r\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n          >\r\n            <Option value=\"Cryptocurency\">Cryptocurrency</Option>\r\n            {data?.data?.coins?.map((coin) => (\r\n              <Option value={coin.name}>{coin.name}</Option>\r\n            ))}\r\n          </Select>\r\n        </Col>\r\n      )}\r\n      {cryptoNews.value.map((news, i) => (\r\n        <Col xs={24} sm={12} lg={8} key={i}>\r\n          <Card\r\n            hoverable\r\n            className=\"news-card\"\r\n            style={{ borderRadius: \"16px\" }}\r\n          >\r\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n              <div className=\"news-image-container\">\r\n                <Title className=\"news-title\" level={4}>\r\n                  {news.name}\r\n                </Title>\r\n                <img\r\n                  src={news?.image?.thumbnail?.contentUrl || demoImage}\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              <p>\r\n                {news.description.length > 100\r\n                  ? `${news.description.substring(0, 100)}...`\r\n                  : news.description}\r\n              </p>\r\n              <div className=\"provider-container\">\r\n                <div>\r\n                  <Avatar\r\n                    src={\r\n                      news.provider[0]?.image?.thumbnail?.contentUrl ||\r\n                      demoImage\r\n                    }\r\n                    alt=\"\"\r\n                  />\r\n                  <Text className=\"provider-name\">\r\n                    {news.provider[0]?.name}\r\n                  </Text>\r\n                </div>\r\n                <Text>\r\n                  {moment(news.datePublished).startOf(\"ss\").fromNow()}\r\n                </Text>\r\n              </div>\r\n            </a>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default News;\r\n","import React from \"react\";\nimport { Layout, Typography, Space } from \"antd\";\n//components\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport {\n  Navbar,\n  Homepage,\n  Exchanges,\n  Cryptocurrencies,\n  CryptoDetails,\n  News,\n} from \"./components\";\n//styles\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <div className=\"navbar\">\n        <Navbar />\n      </div>\n      <div className=\"main\">\n        <Layout>\n          <div className=\"routes\">\n            <Routes>\n              <Route path=\"/\" element={<Homepage />} />\n              <Route path=\"/exchanges\" element={<Exchanges />} />\n              <Route path=\"/cryptocurrencies\" element={<Cryptocurrencies />} />\n              <Route path=\"/crypto/:coinId\" element={<CryptoDetails />} />\n              <Route path=\"/news\" element={<News />} />\n            </Routes>\n          </div>\n        </Layout>\n        <div className=\"footer\">\n          <Typography.Title\n            level={5}\n            style={{ color: \"white\", textAlign: \"center\" }}\n          >\n            Cryptoverse <br />\n            All rights reserved\n          </Typography.Title>\n          <Space>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/exchanges\">Exchanges</Link>\n            <Link to=\"/news\">News</Link>\n          </Space>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./app/store\";\n//components\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n//styles\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}